var { COLLECTION_NAME, init, sample_query1, sample_query2 } = require("../app");
const { MongoClient } = require("mongodb");

describe("MongoDB Testing", () => {
    var con;

    beforeAll(async () => {
        con = await init();
    });

    afterAll(async () => {
        await con.close();
    });

    it("example query: one document", async () => {
        //sample test on fetching only one result
        const expectedResult = {
            "id": 1,
            "name": "Joe Jackson",
            "state": "BC",
            "orders": [
                {
                    "num": 100,
                    "items": 5,
                    "total": 125.35
                }
            ]
        };
        const cursor = await sample_query1(con);
        for (const property in cursor) {
            //notice that expectedResult comes with property "_id" that is autogenerated by mongodb
            //this for loop leaves out "_id" by iterating through cursor
            expect(cursor.property).toEqual(expectedResult.property);
        }
    });

    it("example query: multiple documents", async () => {
        const expectedResult = [
            { "name": 'Sam Smith', "state": 'ON' },
            { "name": 'Rory Ruthers', "state": 'SK' },
            { "name": 'Patty Park', "state": 'AB' },
            { "name": 'Nelly Noris', "state": 'BC' },
            { "name": 'Mallory May', "state": 'ON' },
            { "name": 'Larry Lawrence', "state": 'MB' },
            { "name": 'Kyla Kurter', "state": 'ON' },
            { "name": 'Ingrid Irene', "state": 'BC' },
            { "name": 'Frank Funk', "state": 'AB' },
            { "name": 'Joe Jackson', "state": 'BC' },
        ];
        const cursor = await sample_query2(con);
        // convert the result into an array
        const result = await cursor.toArray();
        expect(result).toEqual(expectedResult);
    });

});